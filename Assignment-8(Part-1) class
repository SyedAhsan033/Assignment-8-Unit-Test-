import java.io.*;
import java.util.*;
import java.util.Arrays;

 public class probStatement {
    public static void main(String[] args) {
        int[] newInt = {3,3,15,100};
        for(int i=0;i<newInt.length;i++) 
            System.out.println(newInt[i]);  
            
        int[] spf = listSmallestPrimeFactors(newInt.length);
        int[] numDivisors = new int[spf.length];
        numDivisors[1] = 1;
        
        for(int i = 2; i < numDivisors.length; i++) {
            int p = spf[i];
            int exp = 1;
            int j = i;
            while(j % p == 0) {
                j /= p;
                exp++;
            }
            numDivisors[i] = exp * numDivisors[j];
        }
        
        int count = 0;
        for(int i = 1; i < newInt[i]; i++) {
            if(numDivisors[i - 1] == numDivisors[i]) {
                count++;
            }
        }
        System.out.println(count);
    }
    
    public static int[] listSmallestPrimeFactors(int n) {
        int[] spf = new int[n];
        for(int i = 2; i < spf.length; i++) {
            if(spf[i] == 0) {
                for(int j = i; j < n; j += i) {
                    if(spf[j] == 0) {
                        spf[j] = i;
                    }
                }
            }
        }
        return spf;
    }
}
